{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MIT-\\uC804\\uD55C\\uBE5B\\\\Desktop\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteList = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  const queryparams = new URLSearchParams(location.search);\n  const isSortingAscending = queryparams.get('sort') === 'asc';\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  console.log(isSortingAscending);\n  function changeSortingHandler() {\n    console.log(isSortingAscending);\n    history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? 'Descending' : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","QuoteList","props","history","location","queryparams","URLSearchParams","search","isSortingAscending","get","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","sortedQuotes","console","log","changeSortingHandler","push","sorting","list","map","quote","author","text"],"sources":["C:/Users/MIT-전한빛/Desktop/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useHistory,useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryparams = new URLSearchParams(location.search);\n  const isSortingAscending = queryparams.get('sort') === 'asc'\n\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n  console.log(isSortingAscending);\n  function changeSortingHandler(){\n    console.log(isSortingAscending)\n    history.push('/quotes?sort='+(isSortingAscending ? 'desc' : 'asc' ))\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : \"Ascending\"}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAACC,WAAW,QAAQ,kBAAkB;AAEzD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAE7C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,OAAO,GAAGN,UAAU,EAAE;EAC5B,MAAMO,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAE5D,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;IACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;MACrC,IAAIH,SAAS,EAAE;QACb,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;MACvC,CAAC,MAAM;QACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,YAAY,GAAGP,UAAU,CAACR,KAAK,CAACS,MAAM,EAAEH,kBAAkB,CAAC;EACjEU,OAAO,CAACC,GAAG,CAACX,kBAAkB,CAAC;EAC/B,SAASY,oBAAoB,GAAE;IAC7BF,OAAO,CAACC,GAAG,CAACX,kBAAkB,CAAC;IAC/BL,OAAO,CAACkB,IAAI,CAAC,eAAe,IAAEb,kBAAkB,GAAG,MAAM,GAAG,KAAK,CAAE,CAAC;EACtE;EACA,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAK,SAAS,EAAER,OAAO,CAACsB,OAAQ;MAAA,uBAC9B;QAAQ,OAAO,EAAEF,oBAAqB;QAAA,oBAAOZ,kBAAkB,GAAG,YAAY,GAAG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAClG,eACN;MAAI,SAAS,EAAER,OAAO,CAACuB,IAAK;MAAA,UACzBN,YAAY,CAACO,GAAG,CAAEC,KAAK,iBACtB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAACT,EAAG;QACb,MAAM,EAAES,KAAK,CAACC,MAAO;QACrB,IAAI,EAAED,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACT,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEf,CAAC;AAAC,GAtCIf,SAAS;EAAA,QACGJ,UAAU,EACTC,WAAW;AAAA;AAAA,KAFxBG,SAAS;AAwCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}